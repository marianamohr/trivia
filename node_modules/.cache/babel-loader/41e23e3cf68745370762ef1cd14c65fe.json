{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/pages/Login.jsx\";\nimport React from 'react';\nimport '../Style/Login.css';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport { actionFetchToken, actionSaveUser } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nome: '',\n      email: '',\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange({\n    target: {\n      value,\n      name\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          nome = _this$state.nome,\n          email = _this$state.email;\n    const _this$props = this.props,\n          getToken = _this$props.getToken,\n          saveUser = _this$props.saveUser;\n    getToken();\n    const gravatar = md5(email).toString();\n    const state = {\n      player: {\n        name: nome,\n        assertions: 0,\n        score: 0,\n        gravatarEmail: email\n      }\n    };\n    saveUser(state.player, gravatar);\n    localStorage.setItem('state', JSON.stringify(state));\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          nome = _this$state2.nome,\n          email = _this$state2.email,\n          redirect = _this$state2.redirect;\n    if (redirect) return React.createElement(Redirect, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      className: \"formContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"input-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"nome\",\n      value: nome,\n      id: \"input-player-name\",\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      onChange: this.handleChange,\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      htmlFor: \"input-gravatar-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      id: \"input-gravatar-email\",\n      type: \"email\",\n      \"data-testid\": \"input-gravatar-email\",\n      onChange: this.handleChange,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      \"data-testid\": \"btn-play\",\n      disabled: !nome.length || !email.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Let's Play\"), React.createElement(Link, {\n      \"data-testid\": \"btn-settings\",\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Settings\")));\n  }\n\n}\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  saveUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  token: state.user.token\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getToken: () => dispatch(actionFetchToken()),\n  saveUser: (user, gravatar) => dispatch(actionSaveUser(user, gravatar))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/pages/Login.jsx"],"names":["React","PropTypes","Redirect","Link","connect","md5","actionFetchToken","actionSaveUser","Login","Component","constructor","props","state","nome","email","redirect","handleChange","bind","handleSubmit","target","value","name","setState","e","preventDefault","getToken","saveUser","gravatar","toString","player","assertions","score","gravatarEmail","localStorage","setItem","JSON","stringify","render","length","propTypes","func","isRequired","mapStateToProps","token","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../Style/Login.css';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport md5 from 'crypto-js/md5';\nimport { actionFetchToken, actionSaveUser } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nome: '',\n      email: '',\n      redirect: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    const { nome, email } = this.state;\n    const { getToken, saveUser } = this.props;\n    getToken();\n    const gravatar = md5(email).toString();\n    const state = {\n      player: { name: nome, assertions: 0, score: 0, gravatarEmail: email },\n    };\n    saveUser(state.player, gravatar);\n    localStorage.setItem('state', JSON.stringify(state));\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { nome, email, redirect } = this.state;\n    if (redirect) return <Redirect to=\"/game\" />;\n\n    return (\n      <div className=\"formContainer\">\n        <form onSubmit={ this.handleSubmit }>\n          <label htmlFor=\"input-player-name\">\n            <input\n              name=\"nome\"\n              value={ nome }\n              id=\"input-player-name\"\n              type=\"text\"\n              data-testid=\"input-player-name\"\n              onChange={ this.handleChange }\n              placeholder=\"Name\"\n            />\n          </label>\n          <label htmlFor=\"input-gravatar-email\">\n            <input\n              name=\"email\"\n              value={ email }\n              id=\"input-gravatar-email\"\n              type=\"email\"\n              data-testid=\"input-gravatar-email\"\n              onChange={ this.handleChange }\n              placeholder=\"Email\"\n            />\n          </label>\n          <button\n            type=\"submit\"\n            data-testid=\"btn-play\"\n            disabled={ !nome.length || !email.length }\n          >\n            Let's Play\n          </button>\n          <Link data-testid=\"btn-settings\" to=\"/settings\">Settings</Link>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  getToken: PropTypes.func.isRequired,\n  saveUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.user.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getToken: () => dispatch(actionFetchToken()),\n  saveUser: (user, gravatar) => dispatch(actionSaveUser(user, gravatar)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}