{"ast":null,"code":"import _objectSpread from \"/Users/marianamohr/Documents/pessoal/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { FETCH_TOKEN, SAVE_USER, SAVE_SCORE } from '../actions/types';\nconst INITIAL_STATE = {\n  token: '',\n  name: '',\n  gravatar: '',\n  gravatarEmail: '',\n  score: 0,\n  assertions: 0\n};\n\nconst user = (state = INITIAL_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_TOKEN:\n      return _objectSpread({}, state, {\n        token: payload.token\n      });\n\n    case SAVE_USER:\n      return _objectSpread({}, state, {\n        name: payload.user.name,\n        gravatarEmail: payload.user.gravatarEmail,\n        assertions: payload.user.assertions,\n        score: payload.user.score,\n        gravatar: `https://www.gravatar.com/avatar/${payload.gravatar}`\n      });\n\n    case SAVE_SCORE:\n      return _objectSpread({}, state, {\n        score: state.score + payload.questionScore,\n        assertions: state.assertions + 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"sources":["/Users/marianamohr/Documents/pessoal/trivia/src/reducers/user.js"],"names":["FETCH_TOKEN","SAVE_USER","SAVE_SCORE","INITIAL_STATE","token","name","gravatar","gravatarEmail","score","assertions","user","state","type","payload","questionScore"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,kBAAnD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,EADa;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,aAAa,EAAE,EAJK;AAKpBC,EAAAA,KAAK,EAAE,CALa;AAMpBC,EAAAA,UAAU,EAAE;AANQ,CAAtB;;AASA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGR,aAAT,EAAwB;AAAES,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAxB,KAA8C;AACzD,UAAQD,IAAR;AACA,SAAKZ,WAAL;AACE,+BACKW,KADL;AAEEP,QAAAA,KAAK,EAAES,OAAO,CAACT;AAFjB;;AAIF,SAAKH,SAAL;AACE,+BACKU,KADL;AAEEN,QAAAA,IAAI,EAAEQ,OAAO,CAACH,IAAR,CAAaL,IAFrB;AAGEE,QAAAA,aAAa,EAAEM,OAAO,CAACH,IAAR,CAAaH,aAH9B;AAIEE,QAAAA,UAAU,EAAEI,OAAO,CAACH,IAAR,CAAaD,UAJ3B;AAKED,QAAAA,KAAK,EAAEK,OAAO,CAACH,IAAR,CAAaF,KALtB;AAMEF,QAAAA,QAAQ,EAAG,mCAAkCO,OAAO,CAACP,QAAS;AANhE;;AAQF,SAAKJ,UAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcK,OAAO,CAACC,aAF/B;AAGEL,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmB;AAHjC;;AAKF;AACE,aAAOE,KAAP;AAtBF;AAwBD,CAzBD;;AA2BA,eAAeD,IAAf","sourcesContent":["import { FETCH_TOKEN, SAVE_USER, SAVE_SCORE } from '../actions/types';\n\nconst INITIAL_STATE = {\n  token: '',\n  name: '',\n  gravatar: '',\n  gravatarEmail: '',\n  score: 0,\n  assertions: 0,\n};\n\nconst user = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n  case FETCH_TOKEN:\n    return {\n      ...state,\n      token: payload.token,\n    };\n  case SAVE_USER:\n    return {\n      ...state,\n      name: payload.user.name,\n      gravatarEmail: payload.user.gravatarEmail,\n      assertions: payload.user.assertions,\n      score: payload.user.score,\n      gravatar: `https://www.gravatar.com/avatar/${payload.gravatar}`,\n    };\n  case SAVE_SCORE:\n    return {\n      ...state,\n      score: state.score + payload.questionScore,\n      assertions: state.assertions + 1,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}