{"ast":null,"code":"import _objectSpread from \"/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/pages/Settings.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actionSetConfiguration } from '../actions/index';\nconst INITIAL_STATE = {\n  category: '',\n  difficult: '',\n  type: ''\n};\nconst listCategory = [{\n  id: 0,\n  name: 'Any Category',\n  value: ''\n}, {\n  id: 11,\n  name: 'Movies',\n  value: 11\n}, {\n  id: 20,\n  name: 'Mitology',\n  value: 20\n}, {\n  id: 9,\n  name: 'General Knowledge',\n  value: 9\n}, {\n  id: 18,\n  name: 'Computers',\n  value: 18\n}, {\n  id: 21,\n  name: 'Sports',\n  value: 21\n}];\nconst listDifficult = [{\n  id: 0,\n  name: 'both',\n  value: ''\n}, {\n  id: 1,\n  name: 'easy',\n  value: 'easy'\n}, {\n  id: 2,\n  name: 'medium',\n  value: 'medium'\n}, {\n  id: 3,\n  name: 'hard',\n  value: 'hard'\n}];\nconst listType = [{\n  id: 0,\n  name: 'both',\n  value: ''\n}, {\n  id: 1,\n  name: 'boolean',\n  value: 'boolean'\n}, {\n  id: 2,\n  name: 'multiple',\n  value: 'multiple'\n}];\n\nclass Settings extends Component {\n  constructor() {\n    super();\n    this.state = _objectSpread({}, INITIAL_STATE);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const saveSettings = this.props.saveSettings;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Settings\"), React.createElement(\"select\", {\n      name: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, listCategory.map(category => React.createElement(\"option\", {\n      key: category.id,\n      value: category.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, category.name))), React.createElement(\"select\", {\n      name: \"difficult\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, listDifficult.map(difficult => React.createElement(\"option\", {\n      key: difficult.id,\n      value: difficult.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, difficult.name))), React.createElement(\"select\", {\n      name: \"type\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, listType.map(type => React.createElement(\"option\", {\n      key: type.id,\n      value: type.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, type.name))), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        saveSettings(this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Save Settings\")));\n  }\n\n}\n\nSettings.propTypes = {\n  saveSettings: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  saveSettings: settings => dispatch(actionSetConfiguration(settings))\n});\n\nexport default connect(null, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/pages/Settings.jsx"],"names":["React","Component","PropTypes","connect","Link","actionSetConfiguration","INITIAL_STATE","category","difficult","type","listCategory","id","name","value","listDifficult","listType","Settings","constructor","state","handleChange","bind","target","setState","render","saveSettings","props","map","propTypes","func","isRequired","mapDispatchToProps","dispatch","settings"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,sBAAT,QAAuC,kBAAvC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,SAAS,EAAE,EAFS;AAGpBC,EAAAA,IAAI,EAAE;AAHc,CAAtB;AAKA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,cAAf;AAA+BC,EAAAA,KAAK,EAAE;AAAtC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE,QAAhB;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CAFmB,EAGnB;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE,UAAhB;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CAHmB,EAInB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,mBAAf;AAAoCC,EAAAA,KAAK,EAAE;AAA3C,CAJmB,EAKnB;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE,WAAhB;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CALmB,EAMnB;AAAEF,EAAAA,EAAE,EAAE,EAAN;AAAUC,EAAAA,IAAI,EAAE,QAAhB;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CANmB,CAArB;AASA,MAAMC,aAAa,GAAG,CACpB;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CADoB,EAEpB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFoB,EAGpB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,QAAf;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAHoB,EAIpB;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAJoB,CAAtB;AAMA,MAAME,QAAQ,GAAG,CACf;AAAEJ,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CADe,EAEf;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,SAAf;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CAFe,EAGf;AAAEF,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,UAAf;AAA2BC,EAAAA,KAAK,EAAE;AAAlC,CAHe,CAAjB;;AAKA,MAAMG,QAAN,SAAuBf,SAAvB,CAAiC;AAC/BgB,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,qBACKZ,aADL;AAGA,SAAKa,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAAC;AAAEE,IAAAA,MAAM,EAAE;AAAET,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAV,GAAD,EAA8B;AACxC,SAAKS,QAAL,CAAc;AAAE,OAACV,IAAD,GAAQC;AAAV,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAG;AAAA,UACCC,YADD,GACkB,KAAKC,KADvB,CACCD,YADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,QAAQ,EAAG,KAAKL,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,YAAY,CAACgB,GAAb,CAAkBnB,QAAD,IAChB;AAAQ,MAAA,GAAG,EAAGA,QAAQ,CAACI,EAAvB;AAA4B,MAAA,KAAK,EAAGJ,QAAQ,CAACM,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDN,QAAQ,CAACK,IAA/D,CADD,CADH,CAFF,EAQE;AAAQ,MAAA,IAAI,EAAC,WAAb;AAAyB,MAAA,QAAQ,EAAG,KAAKO,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,aAAa,CAACY,GAAd,CAAmBlB,SAAD,IACjB;AACE,MAAA,GAAG,EAAGA,SAAS,CAACG,EADlB;AAEE,MAAA,KAAK,EAAGH,SAAS,CAACK,KAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGL,SAAS,CAACI,IAJb,CADD,CADH,CARF,EAkBE;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAG,KAAKO,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QAAQ,CAACW,GAAT,CAAcjB,IAAD,IACZ;AAAQ,MAAA,GAAG,EAAGA,IAAI,CAACE,EAAnB;AAAwB,MAAA,KAAK,EAAGF,IAAI,CAACI,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CJ,IAAI,CAACG,IAAnD,CADD,CADH,CAlBF,EAsBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,MAAM;AAAEY,QAAAA,YAAY,CAAC,KAAKN,KAAN,CAAZ;AAA2B,OAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CAtBF,CADF;AAkCD;;AAjD8B;;AAoDjCF,QAAQ,CAACW,SAAT,GAAqB;AACnBH,EAAAA,YAAY,EAAEtB,SAAS,CAAC0B,IAAV,CAAeC;AADV,CAArB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,YAAY,EAAGQ,QAAD,IAAcD,QAAQ,CAAC1B,sBAAsB,CAAC2B,QAAD,CAAvB;AADI,CAAf,CAA3B;;AAIA,eAAe7B,OAAO,CAAC,IAAD,EAAO2B,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { actionSetConfiguration } from '../actions/index';\n\nconst INITIAL_STATE = {\n  category: '',\n  difficult: '',\n  type: '',\n};\nconst listCategory = [\n  { id: 0, name: 'Any Category', value: '' },\n  { id: 11, name: 'Movies', value: 11 },\n  { id: 20, name: 'Mitology', value: 20 },\n  { id: 9, name: 'General Knowledge', value: 9 },\n  { id: 18, name: 'Computers', value: 18 },\n  { id: 21, name: 'Sports', value: 21 },\n];\n\nconst listDifficult = [\n  { id: 0, name: 'both', value: '' },\n  { id: 1, name: 'easy', value: 'easy' },\n  { id: 2, name: 'medium', value: 'medium' },\n  { id: 3, name: 'hard', value: 'hard' },\n];\nconst listType = [\n  { id: 0, name: 'both', value: '' },\n  { id: 1, name: 'boolean', value: 'boolean' },\n  { id: 2, name: 'multiple', value: 'multiple' },\n];\nclass Settings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ...INITIAL_STATE,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { saveSettings } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Settings</h1>\n        <select name=\"category\" onChange={ this.handleChange }>\n          {listCategory.map((category) => (\n            <option key={ category.id } value={ category.value }>{category.name}</option>\n          ))}\n        </select>\n\n        <select name=\"difficult\" onChange={ this.handleChange }>\n          {listDifficult.map((difficult) => (\n            <option\n              key={ difficult.id }\n              value={ difficult.value }\n            >\n              {difficult.name}\n            </option>))}\n        </select>\n\n        <select name=\"type\" onChange={ this.handleChange }>\n          {listType.map((type) => (\n            <option key={ type.id } value={ type.value }>{type.name}</option>))}\n        </select>\n        <Link to=\"/\">\n\n          <button\n            type=\"button\"\n            onClick={ () => { saveSettings(this.state); } }\n          >\n            Save Settings\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  saveSettings: PropTypes.func.isRequired,\n\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveSettings: (settings) => dispatch(actionSetConfiguration(settings)),\n});\n\nexport default connect(null, mapDispatchToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}