{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/Components/Timer.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTimer } from '../actions';\n\nclass Timer extends Component {\n  componentDidMount() {\n    this.handleTimer();\n  }\n\n  componentDidUpdate() {\n    const _this$props = this.props,\n          currentTime = _this$props.currentTime,\n          isTimerPaused = _this$props.isTimerPaused,\n          reestart = _this$props.reestart,\n          count = _this$props.count;\n    const maxQuestions = 4;\n\n    if (currentTime === 0 || isTimerPaused || count >= maxQuestions) {\n      clearInterval(this.timer);\n    }\n\n    if (reestart) {\n      this.handleTimer();\n    }\n  }\n\n  handleTimer() {\n    const decrementTime = this.props.decrementTime;\n    const oneSec = 1000;\n    this.timer = setInterval(() => {\n      decrementTime();\n    }, oneSec);\n  }\n\n  render() {\n    const currentTime = this.props.currentTime;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, currentTime);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentTime: state.time.currentTime,\n  isTimerPaused: state.time.isTimerPaused,\n  reestart: state.time.reestart\n});\n\nconst mapDispatchToProps = dispatch => ({\n  decrementTime: () => dispatch(setTimer())\n});\n\nTimer.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  decrementTime: PropTypes.func.isRequired,\n  isTimerPaused: PropTypes.bool.isRequired,\n  reestart: PropTypes.bool.isRequired,\n  count: PropTypes.number.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);","map":{"version":3,"sources":["/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/Components/Timer.jsx"],"names":["React","Component","PropTypes","connect","setTimer","Timer","componentDidMount","handleTimer","componentDidUpdate","props","currentTime","isTimerPaused","reestart","count","maxQuestions","clearInterval","timer","decrementTime","oneSec","setInterval","render","mapStateToProps","state","time","mapDispatchToProps","dispatch","propTypes","number","isRequired","func","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,WAAL;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACXC,WADW,eACXA,WADW;AAAA,UACEC,aADF,eACEA,aADF;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC2BC,KAD3B,eAC2BA,KAD3B;AAEnB,UAAMC,YAAY,GAAG,CAArB;;AACA,QAAIJ,WAAW,KAAK,CAAhB,IAAqBC,aAArB,IAAsCE,KAAK,IAAIC,YAAnD,EAAiE;AAC/DC,MAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACD;;AAED,QAAIJ,QAAJ,EAAc;AACZ,WAAKL,WAAL;AACD;AACF;;AAEDA,EAAAA,WAAW,GAAG;AAAA,UACJU,aADI,GACc,KAAKR,KADnB,CACJQ,aADI;AAEZ,UAAMC,MAAM,GAAG,IAAf;AACA,SAAKF,KAAL,GAAaG,WAAW,CAAC,MAAM;AAC7BF,MAAAA,aAAa;AACd,KAFuB,EAErBC,MAFqB,CAAxB;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCV,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAGP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,WAAN,CAAP;AACD;;AA7B2B;;AAgC9B,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,WAAW,EAAEY,KAAK,CAACC,IAAN,CAAWb,WADU;AAElCC,EAAAA,aAAa,EAAEW,KAAK,CAACC,IAAN,CAAWZ,aAFQ;AAGlCC,EAAAA,QAAQ,EAAEU,KAAK,CAACC,IAAN,CAAWX;AAHa,CAAZ,CAAxB;;AAMA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,aAAa,EAAE,MAAMQ,QAAQ,CAACrB,QAAQ,EAAT;AADW,CAAf,CAA3B;;AAIAC,KAAK,CAACqB,SAAN,GAAkB;AAChBhB,EAAAA,WAAW,EAAER,SAAS,CAACyB,MAAV,CAAiBC,UADd;AAEhBX,EAAAA,aAAa,EAAEf,SAAS,CAAC2B,IAAV,CAAeD,UAFd;AAGhBjB,EAAAA,aAAa,EAAET,SAAS,CAAC4B,IAAV,CAAeF,UAHd;AAIhBhB,EAAAA,QAAQ,EAAEV,SAAS,CAAC4B,IAAV,CAAeF,UAJT;AAKhBf,EAAAA,KAAK,EAAEX,SAAS,CAACyB,MAAV,CAAiBC;AALR,CAAlB;AAQA,eAAezB,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setTimer } from '../actions';\n\nclass Timer extends Component {\n  componentDidMount() {\n    this.handleTimer();\n  }\n\n  componentDidUpdate() {\n    const { currentTime, isTimerPaused, reestart, count } = this.props;\n    const maxQuestions = 4;\n    if (currentTime === 0 || isTimerPaused || count >= maxQuestions) {\n      clearInterval(this.timer);\n    }\n\n    if (reestart) {\n      this.handleTimer();\n    }\n  }\n\n  handleTimer() {\n    const { decrementTime } = this.props;\n    const oneSec = 1000;\n    this.timer = setInterval(() => {\n      decrementTime();\n    }, oneSec);\n  }\n\n  render() {\n    const { currentTime } = this.props;\n\n    return <div>{currentTime}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentTime: state.time.currentTime,\n  isTimerPaused: state.time.isTimerPaused,\n  reestart: state.time.reestart,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  decrementTime: () => dispatch(setTimer()),\n});\n\nTimer.propTypes = {\n  currentTime: PropTypes.number.isRequired,\n  decrementTime: PropTypes.func.isRequired,\n  isTimerPaused: PropTypes.bool.isRequired,\n  reestart: PropTypes.bool.isRequired,\n  count: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n"]},"metadata":{},"sourceType":"module"}