{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/Components/Controller.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { actionFetchGameData, pauseTime, actionStart } from '../actions';\nimport Loading from './Loading';\nimport Questions from './Questions';\n\nclass Controller extends Component {\n  constructor(props) {\n    super(props);\n    this.handleNextQuestion = this.handleNextQuestion.bind(this);\n    this.state = {\n      count: 0,\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          fetchGameData = _this$props.fetchGameData,\n          token = _this$props.token;\n    fetchGameData(token);\n  }\n\n  handleNextQuestion() {\n    const start = this.props.start;\n    const count = this.state.count;\n    const NUMBER = 4;\n\n    if (count === NUMBER) {\n      this.setState({\n        redirect: true\n      });\n    }\n\n    this.setState(prev => ({\n      count: prev.count + 1\n    }));\n    start();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          gameData = _this$props2.gameData,\n          currentTime = _this$props2.currentTime,\n          isTimerPaused = _this$props2.isTimerPaused;\n    const _this$state = this.state,\n          count = _this$state.count,\n          startTime = _this$state.startTime,\n          redirect = _this$state.redirect;\n    if (redirect) return React.createElement(Redirect, {\n      to: \"/feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, !gameData.length ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }) : React.createElement(Questions, {\n      questionData: gameData[count],\n      startTime: startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), (currentTime === 0 || isTimerPaused) && React.createElement(\"button\", {\n      onClick: this.handleNextQuestion,\n      type: \"button\",\n      \"data-testid\": \"btn-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nController.propTypes = {\n  fetchGameData: PropTypes.func.isRequired,\n  gameData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  token: PropTypes.string.isRequired,\n  isTimerPaused: PropTypes.bool.isRequired,\n  currentTime: PropTypes.number.isRequired,\n  start: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  gameData: state.game.gameData,\n  token: state.user.token,\n  isTimerPaused: state.time.isTimerPaused,\n  currentTime: state.time.currentTime\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchGameData: token => dispatch(actionFetchGameData(token)),\n  stopTimer: () => dispatch(pauseTime()),\n  start: () => dispatch(actionStart())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controller);","map":{"version":3,"sources":["/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/Components/Controller.jsx"],"names":["React","Component","connect","PropTypes","Redirect","actionFetchGameData","pauseTime","actionStart","Loading","Questions","Controller","constructor","props","handleNextQuestion","bind","state","count","redirect","componentDidMount","fetchGameData","token","start","NUMBER","setState","prev","render","gameData","currentTime","isTimerPaused","startTime","length","propTypes","func","isRequired","arrayOf","object","string","bool","number","mapStateToProps","game","user","time","mapDispatchToProps","dispatch","stopTimer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { actionFetchGameData, pauseTime, actionStart } from '../actions';\n\nimport Loading from './Loading';\nimport Questions from './Questions';\n\nclass Controller extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNextQuestion = this.handleNextQuestion.bind(this);\n\n    this.state = {\n      count: 0,\n      redirect: false,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchGameData, token } = this.props;\n    fetchGameData(token);\n  }\n\n  handleNextQuestion() {\n    const { start } = this.props;\n    const { count } = this.state;\n    const NUMBER = 4;\n\n    if (count === NUMBER) {\n      this.setState({ redirect: true });\n    }\n\n    this.setState((prev) => ({\n      count: prev.count + 1,\n    }));\n\n    start();\n  }\n\n  render() {\n    const { gameData, currentTime, isTimerPaused } = this.props;\n    const { count, startTime, redirect } = this.state;\n    if (redirect) return <Redirect to=\"/feedback\" />;\n\n    return (\n      <div>\n\n        {!gameData.length ? (\n          <Loading />\n        ) : (\n          <Questions questionData={ gameData[count] } startTime={ startTime } />\n        )}\n        {(currentTime === 0 || isTimerPaused) && (\n          <button\n            onClick={ this.handleNextQuestion }\n            type=\"button\"\n            data-testid=\"btn-next\"\n          >\n            Next\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nController.propTypes = {\n  fetchGameData: PropTypes.func.isRequired,\n  gameData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  token: PropTypes.string.isRequired,\n  isTimerPaused: PropTypes.bool.isRequired,\n  currentTime: PropTypes.number.isRequired,\n  start: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  gameData: state.game.gameData,\n  token: state.user.token,\n  isTimerPaused: state.time.isTimerPaused,\n  currentTime: state.time.currentTime,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGameData: (token) => dispatch(actionFetchGameData(token)),\n  stopTimer: () => dispatch(pauseTime()),\n  start: () => dispatch(actionStart()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controller);\n"]},"metadata":{},"sourceType":"module"}