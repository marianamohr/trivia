{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/pages/Feedback.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../Components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const _this$props = this.props,\n          assertions = _this$props.assertions,\n          score = _this$props.score;\n    const minAssertions = 3;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Feedback\"), assertions >= minAssertions ? React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Mandou bem!\") : React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Podia ser melhor...\"), React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-total-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, score), React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-total-question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, assertions));\n  }\n\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  assertions: state.user.assertions,\n  score: state.user.score\n});\n\nexport default connect(mapStateToProps, null)(Feedback);","map":{"version":3,"sources":["/home/mariana/Documentos/projeto/sd-010-b-project-trivia-react-redux/src/pages/Feedback.jsx"],"names":["React","Component","PropTypes","connect","Header","Feedback","render","props","assertions","score","minAssertions","propTypes","number","isRequired","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,MAAM,GAAG;AAAA,wBACuB,KAAKC,KAD5B;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,KADb,eACaA,KADb;AAEP,UAAMC,aAAa,GAAG,CAAtB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGF,UAAU,IAAIE,aAAd,GACG;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADH,GAEG;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALN,EAME;AAAI,qBAAY,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KADH,CANF,EASE;AAAI,qBAAY,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,UADH,CATF,CADF;AAeD;;AAnB8B;;AAsBjCH,QAAQ,CAACM,SAAT,GAAqB;AACnBH,EAAAA,UAAU,EAAEN,SAAS,CAACU,MAAV,CAAiBC,UADV;AAEnBJ,EAAAA,KAAK,EAAEP,SAAS,CAACU,MAAV,CAAiBC;AAFL,CAArB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCP,EAAAA,UAAU,EAAEO,KAAK,CAACC,IAAN,CAAWR,UADW;AAElCC,EAAAA,KAAK,EAAEM,KAAK,CAACC,IAAN,CAAWP;AAFgB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACW,eAAD,EAAkB,IAAlB,CAAP,CAA+BT,QAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../Components/Header';\n\nclass Feedback extends Component {\n  render() {\n    const { assertions, score } = this.props;\n    const minAssertions = 3;\n    return (\n      <div>\n        <Header />\n        <h1 data-testid=\"feedback-text\">Feedback</h1>\n        {assertions >= minAssertions\n          ? <h2 data-testid=\"feedback-text\">Mandou bem!</h2>\n          : <h2 data-testid=\"feedback-text\">Podia ser melhor...</h2>}\n        <h2 data-testid=\"feedback-total-score\">\n          {score}\n        </h2>\n        <h2 data-testid=\"feedback-total-question\">\n          {assertions}\n        </h2>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  assertions: state.user.assertions,\n  score: state.user.score,\n});\nexport default connect(mapStateToProps, null)(Feedback);\n"]},"metadata":{},"sourceType":"module"}